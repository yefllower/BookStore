
CREATE TABLE User (
    uid          INT AUTO_INCREMENT,
    username  VARCHAR(32)  NOT NULL,
    password  VARCHAR(256) NOT NULL,
    name      VARCHAR(256),
    address   VARCHAR(1024),
    phonenum  CHAR(20),
    userpower INT NOT NULL,
    PRIMARY KEY (uid),
    UNIQUE (username)
);

CREATE TABLE Book (
    bid       INT AUTO_INCREMENT,
    isbn      VARCHAR(15),
    title     VARCHAR(256) NOT NULL,
    publisher INT          NOT NULL,
    year      INT          NOT NULL,
    stock     INT          NOT NULL,
    price     REAL         NOT NULL,
    format    ENUM('hardcover', 'softcover') NOT NULL,
    subject   VARCHAR(256),
    PRIMARY KEY (bid),
    UNIQUE (isbn),
    CHECK (stock >= 0),
    CHECK (price >= 0)
);

CREATE TABLE Publisher (
    pid     INT AUTO_INCREMENT,
    name    VARCHAR(256) NOT NULL,
    PRIMARY KEY (pid)
);

CREATE TABLE Feedback (
    bid      INT,
    uid      INT,
    score    INT NOT NULL,
	dates    TIMESTAMP,
    comment  TEXT,
    PRIMARY KEY (bid, uid),
    FOREIGN KEY (bid) REFERENCES Book (bid)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (uid) REFERENCES User (uid)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CHECK (score >= 0 && score <= 10)
);

CREATE TABLE Rating (
    bid    INT,
    uid0   INT,
    uid1   INT,
    score  INT,
    PRIMARY KEY (bid, uid0, uid1),
	CHECK (uid0 != uid1),
	CHECK (score >= 0 && score <= 2),
    FOREIGN KEY (bid, uid0) REFERENCES Feedback (bid, uid)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    FOREIGN KEY (uid1) REFERENCES User (uid)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE Trust (
    uid0   INT,
    uid1   INT,
	trust  BOOLEAN,
    PRIMARY KEY (uid0, uid1),
    FOREIGN KEY (uid0) REFERENCES User (uid)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    FOREIGN KEY (uid1) REFERENCES User (uid)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);
